-- PARAMETRO DE PER√çODO
DECLARE FECHA_INICIAL DATE DEFAULT '2022-06-01'
;
DECLARE FECHA_FINAL DATE DEFAULT '2022-11-30'
;
-- PARAMETRO DE SITES A INSERTAR
DECLARE VAR_SITES ARRAY <STRING>;
SET VAR_SITES = ['MCO','MLA','MLB','MLC','MLM','MLU','MLV']
;

-- INSERT INTO `meli-bi-data.SBOX_MKTVIS.DASH_MOTORS_LEADS_VISITS_MONTHLY`

WITH ATRIBUTOS AS
(
  SELECT
      SIT_SITE_ID
    , USER_TYPE
    , CUS_CUST_ID
    , NOMBREDELCUS
    , ITE_ITEM_ID
    , TITULO_PUBLICACION 
    , TIER 
    , ESTADO 
    , CIUDAD 
    , CALLE_UBICACION
    , BARRIO_UBICACION
    , LATITUD
    , LONGITUD 
    , CATEGORIA_L1 
    , CATEGORIA_L2 
    , CATEGORIA_L3
    , COMBO 
    , ITEM_PADRE 
    , ITE_ITEM_DOM_DOMAIN_ID
    , TIPO_LISTING 
    , CONDICION_ITEM 
    , CAST(REGEXP_EXTRACT(LEFT(KILOMETROS,8),'[0-9]+') AS NUMERIC) AS KILOMETROS
    , CAST(LEFT(ANO,4) AS NUMERIC) AS ANO
    , MARCA
    , MODELO 
    , CARROCERIA
    , VERSION_CORTA 
    , VERSION 
    , TRASMISION
    , MOTORS 
    , TIPO_COMBUSTIBLE 
    , PUERTAS
    , COLOR 
    , LLANTAS
    , PATENTE_PLACA 
    , CONTROL_DE_TRACCION
    , TIPO_MOTO 
    , CC 

  -- COMIENZO BOOLEANOS
    , VIDEO AS HAS_VIDEO

    , (CASE WHEN REGEXP_CONTAINS(UPPER(UNICO_DUENO), 'S.*') IS TRUE THEN TRUE
              WHEN REGEXP_CONTAINS(UPPER(UNICO_DUENO), 'N.*') IS TRUE THEN TRUE 
              END) AS IS_SINGLE_OWNER

    , (CASE WHEN REGEXP_CONTAINS(UPPER(ES_FINANCIABLE), 'S.*') IS TRUE THEN TRUE
              WHEN REGEXP_CONTAINS(UPPER(ES_FINANCIABLE), 'N.*') IS TRUE THEN TRUE 
              END) AS IS_FINANCEABLE
      
    , (CASE WHEN REGEXP_CONTAINS(UPPER(TIENE_CONTROL_ESTABILIDAD), 'S.*') IS TRUE THEN TRUE
              WHEN REGEXP_CONTAINS(UPPER(TIENE_CONTROL_ESTABILIDAD), 'N.*') IS TRUE THEN TRUE 
              END) AS HAS_STABILITY_CONTROL

    , (CASE WHEN (   REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(FRENOS_ABS), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(TIENE_FRENOS_ABS), 'S.*') IS TRUE
                    ) THEN TRUE
              WHEN (   REGEXP_CONTAINS(UPPER(HAS_ABS_BRAKES), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(FRENOS_ABS), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(TIENE_FRENOS_ABS), 'N.*') IS TRUE
                    ) THEN FALSE
              END) AS HAS_ABS_BRAKES

    , (CASE WHEN (   REGEXP_CONTAINS(UPPER(TIENE_AIRBAG_PASAJERO), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(TIENE_ARIBAG_CONDUCTOR), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_LATERALES), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_DE_CORTINA), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_LATERAL_TRASERO), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_LATERALES_DELANTEROS), 'S.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_DE_IMPACTO_LATERAL), 'S.*') IS TRUE
                    ) THEN TRUE
              WHEN (   REGEXP_CONTAINS(UPPER(TIENE_AIRBAG_PASAJERO), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(TIENE_ARIBAG_CONDUCTOR), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_LATERALES), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_DE_CORTINA), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_LATERAL_TRASERO), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_LATERALES_DELANTEROS), 'N.*') IS TRUE
                    OR REGEXP_CONTAINS(UPPER(AIRBAG_DE_IMPACTO_LATERAL), 'N.*') IS TRUE
                    ) THEN FALSE
              END) AS HAS_AIRBAG

  FROM `meli-bi-data.SBOX_CLASSI_PLANNING.LK_ATRIBUTOS_IMM_IMS` AS A
)

-- , LEADS AS

SELECT
DATE_TRUNC(A.FECHA,MONTH) AS YEAR_MONTH
 , A.SIT_SITE_ID AS SITE_ID
  , A.USER_TYPE
  , CAST(A.CUS_CUST_ID AS STRING) AS CUSTOMER_SELLER_ID
  , NOMBREDELCUS AS CUSTOMER_SELLER_NAME
  , CAST(A.ITE_ITEM_ID AS STRING) AS ITEM_ID
  , TITULO_PUBLICACION AS ITEM_TITLE_NAME
  , TIER 
  , ESTADO AS ITEM_STATE
  , CIUDAD AS ITEM_CITY
  , CALLE_UBICACION AS ITEM_STREET
  , BARRIO_UBICACION AS ITEM_NEIGHBORHOOD
  , CAST(LATITUD AS STRING) AS ITEM_LATITUD
  , CAST(LONGITUD AS STRING) ITEM_LONGITUD
  , CATEGORIA_L1 AS CATEGORY_NAME_L1
  , CATEGORIA_L2 AS CATEGORY_NAME_L2 
  , CATEGORIA_L3 AS CATEGORY_NAME_L3
  , A.COMBO 
  , CAST(ITEM_PADRE AS STRING) AS ITEM_PARENT_ID
  , ITE_ITEM_DOM_DOMAIN_ID AS ITEM_DOMAIN
  , TIPO_LISTING AS ITEM_LISTING_TYPE
  , CONDICION_ITEM AS ITEM_CONDITION
  , KILOMETROS AS KILOMETERS
  , ANO AS VEHICLE_YEAR
  , MARCA AS BRAND
  , MODELO AS MODEL
  , CARROCERIA AS VEHICLE_BODY_TYPE
  , VERSION_CORTA AS SHORT_VERSION
  , VERSION 
  , TRASMISION AS TRANSMISSION
  , MOTORS AS ENGINE
  , TIPO_COMBUSTIBLE AS FUEL_TYPE
  , CAST(PUERTAS AS NUMERIC) AS DOORS
  , COLOR 
  , LLANTAS AS STEERING
  , PATENTE_PLACA AS LICENSE_PLATE
  , CONTROL_DE_TRACCION AS TRACTION_CONTROL
  , TIPO_MOTO AS MOTO_TYPE
  , CC AS ENGINE_DISPLACEMENT
  , HAS_VIDEO
  , IS_SINGLE_OWNER
  , IS_FINANCEABLE
  , HAS_STABILITY_CONTROL
  , HAS_ABS_BRAKES
  , HAS_AIRBAG
, B.SIT_CURRENCY_ID AS SITE_CURRENCY_ID
, B.ITE_CURRENT_PRICE AS SITE_CURRENCY_ITEM_PRICE
, B.ITEM_LOCAL_PRICE
, B.ITEM_USD_PRICE

-- LEAD_SOURCE IN ('TC','ggggg','PI','TI','ML','NA','null','pi','TX','MT','TM','MS','MCO')
-- CONTACTOS TOTALES
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN _CALL+WHATSAPP+PREGUNTAS_UNICOS+QUOTATIONS_UNICOS+ENTREGAS+PRESUPUESTOS ELSE 0 END) AS ML_CONTACTOS_TOTALES_UNIQUE
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN _CALL+WHATSAPP+PREGUNTAS_UNICOS+QUOTATIONS_UNICOS+ENTREGAS+PRESUPUESTOS ELSE 0 END) AS TC_CONTACTOS_TOTALES_UNIQUE
, SUM(_CALL+WHATSAPP+PREGUNTAS_UNICOS+QUOTATIONS_UNICOS+ENTREGAS+PRESUPUESTOS) AS CONTACTOS_TOTALES_UNIQUE

-- CONTACTOS POR TIPO
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN _CALL ELSE 0 END) AS ML_CALL
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN _CALL ELSE 0 END) AS TC_CALL
, SUM(_CALL) AS CALL

, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN WHATSAPP ELSE 0 END) AS ML_WHATSAPP
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN WHATSAPP ELSE 0 END) AS TC_WHATSAPP
, SUM(WHATSAPP) AS WHATSAPP

--PREGUNTAS POR TIPO
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN PREGUNTAS_UNICOS ELSE 0 END) AS ML_PREGUNTAS_UNICOS
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN PREGUNTAS_UNICOS ELSE 0 END) AS TC_PREGUNTAS_UNICOS
, SUM(PREGUNTAS_UNICOS) AS PREGUNTAS_UNICOS

-- ENTREGAS: MOTORS DEPRECADO
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN ENTREGAS ELSE 0 END) AS ML_ENTREGAS
, SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN ENTREGAS ELSE 0 END) AS TC_ENTREGAS
, SUM(ENTREGAS) AS ENTREGAS

-- -- QUOTATIONS: SOLO REAL ESTATE
-- , SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN QUOTATIONS_UNICOS ELSE 0 END) AS ML_QUOTATIONS_UNICOS
-- , SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN QUOTATIONS_UNICOS ELSE 0 END) AS TC_QUOTATIONS_UNICOS
-- , SUM(QUOTATIONS_UNICOS) AS QUOTATIONS_UNICOS

-- -- PRESUPUESTOS: SERVICIOS
-- , SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'ML' THEN PRESUPUESTOS ELSE 0 END) AS ML_PRESUPUESTOS
-- , SUM(CASE WHEN UPPER(LEAD_SOURCE) = 'TC' THEN PRESUPUESTOS ELSE 0 END) AS TC_PRESUPUESTOS
-- , SUM(PRESUPUESTOS) AS PRESUPUESTOS


-- VISITAS
, SUM(VIEW_PHONE) AS VIEW_PHONE
, SUM(VISITAS_IOS) AS VISITAS_IOS
, SUM(VISITAS_ANDROID) AS VISITAS_ANDROID
, SUM(VISITAS_MOBILEWEB) AS VISITAS_MOBILEWEB
, SUM(VISITAS_STD_DESKTOP) AS VISITAS_STD_DESKTOP
, SUM(VISITAS_OTROS) AS VISITAS_OTROS
, SUM(VISITAS_TOTAL) AS VISITAS_TOTAL


-- , sum(_call+Whatsapp+Preguntas_totales+Quotations_totales+entregas+presupuestos) contactos_totales

-- , sum(_call) AS _call
-- , sum(Whatsapp) AS Whatsapp
-- , sum(Preguntas_unicos) AS Preguntas_unicos
-- , sum(Quotations_unicos) AS Quotations_unicos
-- , sum(entregas) AS entregas
-- , sum(presupuestos) AS presupuestos

-- , sum ( Visitas_total) visita
-- -- sum (0) sesiones,
-- -- sum (0) users,
-- , sum(0) LL
-- , SUM(0) LL2

FROM `meli-bi-data.SBOX_CLASSI_PLANNING.BT_VIBRANCY_TOTAL_SITES` AS A

-- PARA COLUMNAS DE CURRENCY, PRECIO, PRECIO LC Y PRECIO USD
LEFT JOIN 
      (
      SELECT 
      DATE_TRUNC(I.TIM_DAY,MONTH) AS YEAR_MONTH
      , I.SIT_SITE_ID
      , I.ITE_ITEM_ID
      , I.SIT_CURRENCY_ID
      , I.ITE_CURRENT_PRICE
      , (CASE WHEN REGEXP_EXTRACT(I.SIT_CURRENCY_ID,'[A-Z]+') <> 'DOL' THEN ITE_CURRENT_PRICE 
                  WHEN REGEXP_EXTRACT(I.SIT_CURRENCY_ID,'[A-Z]+') = 'DOL' THEN SAFE_MULTIPLY(ITE_CURRENT_PRICE , TC.CCO_TC_VALUE)
                  ELSE NULL END) AS ITEM_LOCAL_PRICE
      , (CASE WHEN REGEXP_EXTRACT(I.SIT_CURRENCY_ID,'[A-Z]+') = 'DOL' THEN ITE_CURRENT_PRICE 
                  WHEN REGEXP_EXTRACT(I.SIT_CURRENCY_ID,'[A-Z]+') <> 'DOL' THEN SAFE_DIVIDE(ITE_CURRENT_PRICE , TC.CCO_TC_VALUE)
                  ELSE NULL END) AS ITEM_USD_PRICE

      FROM `meli-bi-data.WHOWNER.BT_LIVE_LISTINGS_CLASSIFIEDS` AS I

      -- LE AGREGO TASA DE CAMBIO PARA COLUMNAS DE PRECIO_LOCAL PRECIO_USD
      LEFT JOIN `meli-bi-data.WHOWNER.LK_CURRENCY_CONVERTION` AS TC
      ON I.SIT_SITE_ID = TC.SIT_SITE_ID
      AND I.TIM_DAY	= TC.TIM_DAY_TC

      WHERE I.TIM_DAY BETWEEN FECHA_INICIAL AND FECHA_FINAL

      QUALIFY ROW_NUMBER() OVER (PARTITION BY DATE_TRUNC(I.TIM_DAY,MONTH),I.SIT_SITE_ID,I.ITE_ITEM_ID ORDER BY I.TIM_DAY DESC) = 1

      ) AS B
ON A.SIT_SITE_ID = B.SIT_SITE_ID
AND A.ITE_ITEM_ID = B.ITE_ITEM_ID
AND DATE_TRUNC(A.FECHA,MONTH) = B.YEAR_MONTH

-- JOIN ATRIBUTOS
LEFT JOIN ATRIBUTOS AS ATT
ON ATT.ITE_ITEM_ID = A.ITE_ITEM_ID
AND ATT.SIT_SITE_ID = A.SIT_SITE_ID
AND A.CAT_CATEG_ID_L1 = '1743'

WHERE A.FECHA BETWEEN FECHA_INICIAL AND FECHA_FINAL
AND A.SIT_SITE_ID IN UNNEST(VAR_SITES)
AND A.CAT_CATEG_ID_L1 = '1743'
AND A.FRAUDE = 'N/A'
AND A.SIT_SITE_ID IS NOT NULL

GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49
